{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2190bc74\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"基础信息\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"btns\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"addFormRef\",\n      model: _ctx.addForm,\n      rules: _ctx.addFormRules\n    }, {\n      default: _withCtx(() => [_hoisted_1, _createVNode(_component_el_row, {\n        gutter: 15\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          ref: \"elForm\",\n          model: $data.formData,\n          rules: $data.rules,\n          size: \"medium\",\n          \"label-width\": \"100px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"日程名称：\",\n              prop: \"field101\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: $data.formData.field101,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.field101 = $event),\n                placeholder: \"请输入日程名称：\",\n                clearable: \"\",\n                style: {\n                  width: '100%'\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 16\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"类型：\",\n              prop: \"field102\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_select, {\n                modelValue: $data.formData.field102,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.field102 = $event),\n                placeholder: \"请选择类型：\",\n                clearable: \"\",\n                style: {\n                  width: '100%'\n                }\n              }, {\n                default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.field102Options, (item, index) => {\n                  return _openBlock(), _createBlock(_component_el_option, {\n                    key: index,\n                    label: item.label,\n                    value: item.value,\n                    disabled: item.disabled\n                  }, null, 8 /* PROPS */, [\"label\", \"value\", \"disabled\"]);\n                }), 128 /* KEYED_FRAGMENT */))]),\n\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 24\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"描述：\",\n              prop: \"field103\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: $data.formData.field103,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.field103 = $event),\n                type: \"textarea\",\n                placeholder: \"请输入描述：\",\n                autosize: {\n                  minRows: 4,\n                  maxRows: 4\n                },\n                style: {\n                  width: '100%'\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 21\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"时间范围：\",\n              prop: \"field105\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n                modelValue: $data.formData.field105,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.field105 = $event),\n                \"is-range\": \"\",\n                format: \"HH:mm:ss\",\n                \"value-format\": \"HH:mm:ss\",\n                style: {\n                  width: '100%'\n                },\n                \"start-placeholder\": \"开始时间\",\n                \"end-placeholder\": \"结束时间\",\n                \"range-separator\": \"至\",\n                clearable: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        onClick: $options.shiftManagement\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"保存\")]),\n        _: 1 /* STABLE */\n      })])]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;gEAGMA,oBAAa,YAAT,MAAI;;EAkEHC,KAAK,EAAC;AAAM;;;;;;;;;;;;uBApErBC,aAyEUC;sBAxER,MAuEU,CAvEVC,aAuEUC;MAvEDC,GAAG,EAAC,YAAY;MAAEC,KAAK,EAAEC,YAAO;MAAGC,KAAK,EAAED;;wBACjD,MAAa,CAAbE,UAAa,EACbN,aAgESO;QAhEAC,MAAM,EAAE;MAAE;0BACjB,MA8DU,CA9DVR,aA8DUC;UA7DRC,GAAG,EAAC,QAAQ;UACXC,KAAK,EAAEM,cAAQ;UACfJ,KAAK,EAAEI,WAAK;UACbC,IAAI,EAAC,QAAQ;UACb,aAAW,EAAC;;4BAEZ,MAUS,CAVTV,aAUSW;YAVAC,IAAI,EAAE;UAAE;8BACf,MAQe,CARfZ,aAQea;cARDC,KAAK,EAAC,OAAO;cAACC,IAAI,EAAC;;gCAC/B,MAMW,CANXf,aAMWgB;4BALAP,cAAQ,CAACQ,QAAQ;2EAAjBR,cAAQ,CAACQ,QAAQ;gBAC1BC,WAAW,EAAC,UAAU;gBACtBC,SAAS,EAAT,EAAS;gBACRC,KAAK,EAAE;kBAAAC;gBAAA;;;;;;cAKdrB,aAiBSW;YAjBAC,IAAI,EAAE;UAAE;8BACf,MAee,CAffZ,aAeea;cAfDC,KAAK,EAAC,KAAK;cAACC,IAAI,EAAC;;gCAC7B,MAaY,CAbZf,aAaYsB;4BAZDb,cAAQ,CAACc,QAAQ;2EAAjBd,cAAQ,CAACc,QAAQ;gBAC1BL,WAAW,EAAC,QAAQ;gBACpBC,SAAS,EAAT,EAAS;gBACRC,KAAK,EAAE;kBAAAC;gBAAA;;kCAGN,MAAwC,oBAD1CG,oBAMaC,6BALahB,qBAAe,GAA/BiB,IAAI,EAAEC,KAAK;uCADrB7B,aAMa8B;oBAJVC,GAAG,EAAEF,KAAK;oBACVb,KAAK,EAAEY,IAAI,CAACZ,KAAK;oBACjBgB,KAAK,EAAEJ,IAAI,CAACI,KAAK;oBACjBC,QAAQ,EAAEL,IAAI,CAACK;;;;;;;;;;cAKxB/B,aAUSW;YAVAC,IAAI,EAAE;UAAE;8BACf,MAQe,CARfZ,aAQea;cARDC,KAAK,EAAC,KAAK;cAACC,IAAI,EAAC;;gCAC7B,MAMY,CANZf,aAMYgB;4BALDP,cAAQ,CAACuB,QAAQ;2EAAjBvB,cAAQ,CAACuB,QAAQ;gBAC1BC,IAAI,EAAC,UAAU;gBACff,WAAW,EAAC,QAAQ;gBACnBgB,QAAQ,EAAE;kBAAAC;kBAAAC;gBAAA,CAA0B;gBACpChB,KAAK,EAAE;kBAAAC;gBAAA;;;;;;cAIdrB,aAcSW;YAdAC,IAAI,EAAE;UAAE;8BACf,MAYe,CAZfZ,aAYea;cAZDC,KAAK,EAAC,OAAO;cAACC,IAAI,EAAC;;gCAC/B,MAUkB,CAVlBf,aAUkBqC;4BATP5B,cAAQ,CAAC6B,QAAQ;2EAAjB7B,cAAQ,CAAC6B,QAAQ;gBAC1B,UAAQ,EAAR,EAAQ;gBACRC,MAAM,EAAC,UAAU;gBACjB,cAAY,EAAC,UAAU;gBACtBnB,KAAK,EAAE;kBAAAC;gBAAA,CAAiB;gBACzB,mBAAiB,EAAC,MAAM;gBACxB,iBAAe,EAAC,MAAM;gBACtB,iBAAe,EAAC,GAAG;gBACnBF,SAAS,EAAT;;;;;;;;;;;UAMVvB,oBAGM,OAHN4C,UAGM,GAFJxC,aAAkDyC;QAAtCC,OAAK,EAAEC;MAAe;0BAAE,MAAE,kBAAF,IAAE;;sCACtC3C,aAAwCyC;QAA7BR,IAAI,EAAC;MAAS;0BAAC,MAAE,kBAAF,IAAE","names":["_createElementVNode","class","_createBlock","_component_el_card","_createVNode","_component_el_form","ref","model","_ctx","rules","_hoisted_1","_component_el_row","gutter","$data","size","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","field101","placeholder","clearable","style","width","_component_el_select","field102","_createElementBlock","_Fragment","item","index","_component_el_option","key","value","disabled","field103","type","autosize","minRows","maxRows","_component_el_time_picker","field105","format","_hoisted_2","_component_el_button","onClick","$options"],"sourceRoot":"","sources":["E:\\work\\vue\\schedule\\intelligent-schedule\\src\\views\\ScheduleSetting\\AddShiftManagement.vue"],"sourcesContent":["<template>\r\n  <el-card>\r\n    <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"addFormRules\">\r\n      <h4>基础信息</h4>\r\n      <el-row :gutter=\"15\">\r\n        <el-form\r\n          ref=\"elForm\"\r\n          :model=\"formData\"\r\n          :rules=\"rules\"\r\n          size=\"medium\"\r\n          label-width=\"100px\"\r\n        >\r\n          <el-col :span=\"16\">\r\n            <el-form-item label=\"日程名称：\" prop=\"field101\">\r\n              <el-input\r\n                v-model=\"formData.field101\"\r\n                placeholder=\"请输入日程名称：\"\r\n                clearable\r\n                :style=\"{ width: '100%' }\"\r\n              >\r\n              </el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"16\">\r\n            <el-form-item label=\"类型：\" prop=\"field102\">\r\n              <el-select\r\n                v-model=\"formData.field102\"\r\n                placeholder=\"请选择类型：\"\r\n                clearable\r\n                :style=\"{ width: '100%' }\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in field102Options\"\r\n                  :key=\"index\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                  :disabled=\"item.disabled\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"描述：\" prop=\"field103\">\r\n              <el-input\r\n                v-model=\"formData.field103\"\r\n                type=\"textarea\"\r\n                placeholder=\"请输入描述：\"\r\n                :autosize=\"{ minRows: 4, maxRows: 4 }\"\r\n                :style=\"{ width: '100%' }\"\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"21\">\r\n            <el-form-item label=\"时间范围：\" prop=\"field105\">\r\n              <el-time-picker\r\n                v-model=\"formData.field105\"\r\n                is-range\r\n                format=\"HH:mm:ss\"\r\n                value-format=\"HH:mm:ss\"\r\n                :style=\"{ width: '100%' }\"\r\n                start-placeholder=\"开始时间\"\r\n                end-placeholder=\"结束时间\"\r\n                range-separator=\"至\"\r\n                clearable\r\n              ></el-time-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form>\r\n      </el-row>\r\n      <div class=\"btns\">\r\n        <el-button @click=\"shiftManagement\">取消</el-button>\r\n        <el-button type=\"primary\">保存</el-button>\r\n      </div>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  components: {},\r\n  props: [],\r\n  data() {\r\n    return {\r\n      radio: \"1\",\r\n      chosedDate: \"\",\r\n      value: [],\r\n      formData: {\r\n        field101: undefined,\r\n        field102: undefined,\r\n        field103: undefined,\r\n        field105: [\"19:50:02\", \"20:50:02\"],\r\n      },\r\n      rules: {\r\n        field101: [\r\n          {\r\n            required: true,\r\n            message: \"请输入日程名称：\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        field102: [\r\n          {\r\n            required: true,\r\n            message: \"请选择类型：\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        field103: [\r\n          {\r\n            required: true,\r\n            message: \"请输入描述：\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        field105: [\r\n          {\r\n            required: true,\r\n            type: \"array\",\r\n            message: \"请至少选择一个field105\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n      },\r\n      field102Options: [\r\n        {\r\n          label: \"选项一\",\r\n          value: 1,\r\n        },\r\n        {\r\n          label: \"选项二\",\r\n          value: 2,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    shiftManagement() {\r\n      this.$router.push({\r\n        name: \"shiftManagement\",\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh4 {\r\n  position: relative;\r\n  padding-left: 10px;\r\n}\r\nh4::before {\r\n  position: absolute;\r\n  left: -5px;\r\n  top: 2px;\r\n  content: \"\";\r\n  width: 4px;\r\n  height: 18px;\r\n  background-color: skyblue;\r\n}\r\n.state {\r\n  margin-left: 25px;\r\n}\r\n.first,\r\n.two,\r\n.three {\r\n  margin-left: 20px;\r\n}\r\n.btns {\r\n  margin-top: 20px;\r\n  margin-left: 800px;\r\n}\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
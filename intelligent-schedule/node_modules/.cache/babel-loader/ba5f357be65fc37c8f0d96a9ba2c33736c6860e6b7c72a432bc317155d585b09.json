{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from \"mockjs\";\nimport Cookie from \"js-cookie\";\nimport { getLogin, getMenu } from \"../api\";\nimport axios from \"axios\";\nimport { ElMessage } from 'element-plus';\nexport default {\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入用户名\"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入密码\"\n        }]\n      }\n    };\n  },\n  methods: {\n    submit() {\n      // // token信息\n      // const token = Mock.Random.guid();\n      // //将token信息存入cookie用于不同页面的通讯\n      // Cookie.set('token',token)\n\n      // 校验通过\n      this.$refs.form.validate(vaild => {\n        // console.log(getMenu(from))\n        if (vaild) {\n          console.log(vaild);\n          // console.log(\"from\"+this.form.password)\n          getLogin(this.form).then(({\n            data\n          }) => {\n            // console.log(\"数据\"+data)\n            // console.log(\"falg   \"+data.flag)\n            // console.log(\"root   \"+data.employee.root)\n            sessionStorage.setItem(\"employee\", JSON.stringify(data.employee)); //存储user对象\n            let a = sessionStorage.getItem(\"employee\");\n            console.log(\"这是什么\" + a.trim());\n            // console.log(a.employeeId);\n            console.log(\"猜猜我是谁\" + JSON.parse(a).employeeId);\n            // console.log(data.employee)\n            if (data.flag === \"ok\") {\n              getMenu(parseInt(data.employee.root)).then(({\n                data\n              }) => {\n                if (data.code === 200) {\n                  //将token信息存入cookie中用于不同页面间的通讯\n                  Cookie.set(\"token\", data.data.token);\n                  //获取菜单的数据，存入store\n                  // data.data.menu\n                  this.$store.commit(\"setMenu\", data.data.menu);\n                  //跳转到首页\n                  this.$router.push(\"/home\");\n                } else {\n                  this.$message.error(data.data.message);\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            } else {\n              console.log(data.flag);\n            }\n          });\n          console.log(vaild);\n          // console.log(\"from\"+this.form.password)\n          getLogin(this.form).then(({\n            data\n          }) => {\n            // console.log(\"数据\"+data)\n            // console.log(\"falg   \"+data.flag)\n            // console.log(\"root   \"+data.employee.root)\n            sessionStorage.setItem(\"employee\", JSON.stringify(data.employee)); //存储user对象\n            let a = sessionStorage.getItem(\"employee\");\n            console.log(\"这是什么\" + a.trim());\n            console.log(a.employeeId);\n            console.log(\"猜猜我是谁\" + JSON.parse(a).employeeId);\n            // console.log(data.employee)\n            if (data.flag === \"ok\") {\n              getMenu(parseInt(data.employee.root)).then(({\n                data\n              }) => {\n                if (data.code === 200) {\n                  //将token信息存入cookie中用于不同页面间的通讯\n                  Cookie.set(\"token\", data.data.token);\n                  //获取菜单的数据，存入store\n                  // data.data.menu\n                  this.$store.commit(\"setMenu\", data.data.menu);\n                  //跳转到首页\n                  this.$router.push(\"/home\");\n                } else {\n                  this.$message.error(data.data.message);\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            } else {\n              ElMessage.error('Oops, this is a error message.');\n              console.log(\"这是啥啊\" + data.flag);\n            }\n          });\n        } else {\n          ElMessage.error('Oops, this is a error message.');\n          console.log(\"这是啥啊\" + data.flag);\n          console.log(vaild);\n        }\n      });\n    },\n    login() {\n      var that = this;\n      axios.post(\"http://localhost:8082/employee/login\", {\n        //请求登录接口\n        username: this.form.username,\n        password: this.form.password\n      }).then(function (response) {\n        console.log(response.data);\n        that.response = response.data;\n        that.$emit(\"lisentcurrent\", [that.response]);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log(\"pass\", that.response);\n      this.$router.push(\"/home\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Mock","Cookie","getLogin","getMenu","axios","ElMessage","data","form","username","password","rules","required","trigger","message","methods","submit","$refs","validate","vaild","console","log","then","sessionStorage","setItem","JSON","stringify","employee","a","getItem","trim","parse","employeeId","flag","parseInt","root","code","set","token","$store","commit","menu","$router","push","$message","error","catch","err","login","that","post","response","$emit"],"sourceRoot":"","sources":["E:\\work\\vue\\schedule\\intelligent-schedule\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div id=\"building\">\r\n    <el-form ref=\"form\" class=\"login-container\" :model=\"form\" :inline=\"true\">\r\n      <!-- :rules=\"rules\" -->\r\n      <h3 class=\"login_title\">用户登录</h3>\r\n      <div>\r\n        <el-form-item class=\"login_username\" label=\"用户名\">\r\n          <el-input v-model=\"form.username\" placeholder=\"请输入账号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密&ensp;&ensp;码\" class=\"login\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"form.password\"\r\n            placeholder=\"请输入密码\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"submit\" class=\"button\" type=\"primary\"\r\n            >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Mock from \"mockjs\";\r\nimport Cookie from \"js-cookie\";\r\nimport { getLogin, getMenu } from \"../api\";\r\nimport axios from \"axios\";\r\nimport { ElMessage } from 'element-plus'\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, trigger: \"blur\", message: \"请输入用户名\" },\r\n        ],\r\n        password: [{ required: true, trigger: \"blur\", message: \"请输入密码\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      // // token信息\r\n      // const token = Mock.Random.guid();\r\n      // //将token信息存入cookie用于不同页面的通讯\r\n      // Cookie.set('token',token)\r\n\r\n      // 校验通过\r\n      this.$refs.form.validate((vaild) => {\r\n        // console.log(getMenu(from))\r\n        if (vaild) {\r\n          console.log(vaild);\r\n          // console.log(\"from\"+this.form.password)\r\n          getLogin(this.form).then(({ data }) => {\r\n            // console.log(\"数据\"+data)\r\n            // console.log(\"falg   \"+data.flag)\r\n            // console.log(\"root   \"+data.employee.root)\r\n            sessionStorage.setItem(\"employee\", JSON.stringify(data.employee)); //存储user对象\r\n            let a = sessionStorage.getItem(\"employee\");\r\n            console.log(\"这是什么\" + a.trim());\r\n            // console.log(a.employeeId);\r\n            console.log(\"猜猜我是谁\" + JSON.parse(a).employeeId);\r\n            // console.log(data.employee)\r\n            if (data.flag === \"ok\") {\r\n              getMenu(parseInt(data.employee.root))\r\n                .then(({ data }) => {\r\n                  if (data.code === 200) {\r\n                    //将token信息存入cookie中用于不同页面间的通讯\r\n                    Cookie.set(\"token\", data.data.token);\r\n                    //获取菜单的数据，存入store\r\n                    // data.data.menu\r\n                    this.$store.commit(\"setMenu\", data.data.menu);\r\n                    //跳转到首页\r\n                    this.$router.push(\"/home\");\r\n                  } else {\r\n                    this.$message.error(data.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            } else {\r\n              console.log(data.flag);\r\n            }\r\n          });\r\n          console.log(vaild);\r\n          // console.log(\"from\"+this.form.password)\r\n          getLogin(this.form)\r\n            .then(({ data }) => {\r\n              // console.log(\"数据\"+data)\r\n              // console.log(\"falg   \"+data.flag)\r\n              // console.log(\"root   \"+data.employee.root)\r\n              sessionStorage.setItem(\"employee\",JSON.stringify(data.employee));//存储user对象\r\n              let a = sessionStorage.getItem(\"employee\");\r\n              console.log(\"这是什么\"+a.trim())\r\n              console.log(a.employeeId)\r\n              console.log(\"猜猜我是谁\"+JSON.parse(a).employeeId);\r\n              // console.log(data.employee)\r\n              if(data.flag===\"ok\"){\r\n                getMenu(parseInt(data.employee.root)).then(({ data }) => {\r\n                  if (data.code === 200) {\r\n                    //将token信息存入cookie中用于不同页面间的通讯\r\n                    Cookie.set(\"token\", data.data.token);\r\n                    //获取菜单的数据，存入store\r\n                    // data.data.menu\r\n                    this.$store.commit(\"setMenu\", data.data.menu);\r\n                    //跳转到首页\r\n                    this.$router.push(\"/home\");\r\n                  } else {\r\n                    this.$message.error(data.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            } else {\r\n\r\n                  ElMessage.error('Oops, this is a error message.')\r\n\r\n              console.log(\"这是啥啊\"+data.flag);\r\n            }\r\n          });\r\n        } else {\r\n          ElMessage.error('Oops, this is a error message.')\r\n\r\n          console.log(\"这是啥啊\"+data.flag);\r\n          console.log(vaild);\r\n        }\r\n      });\r\n    },\r\n\r\n    login() {\r\n      var that = this;\r\n      axios\r\n        .post(\"http://localhost:8082/employee/login\", {\r\n          //请求登录接口\r\n          username: this.form.username,\r\n          password: this.form.password,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n          that.response = response.data;\r\n          that.$emit(\"lisentcurrent\", [that.response]);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(\"pass\", that.response);\r\n      this.$router.push(\"/home\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-self: center;\r\n  justify-self: center;\r\n  width: 500px;\r\n  height: 270px;\r\n  // border: 1px solid #eaeaea;\r\n  margin: 0 auto;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  border-radius: 10px;\r\n  // padding: 35px 80px 15px 35px;\r\n  // box-shadow: 0 0 25px #cac6c6;\r\n  // box-sizing: border-box;\r\n  // box-shadow:0 0 10px 10px #fff;\r\n\r\n  div {\r\n    display: flex;\r\n    align-self: center;\r\n    justify-self: center;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .login_title {\r\n    margin-top: 40px;\r\n    // padding: 20px 0;\r\n    margin-bottom: 30px;\r\n    color: #505458;\r\n  }\r\n\r\n  .login_username {\r\n    display: flex;\r\n    flex-direction: row;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    // border: 1px solid black;\r\n    // width: 250px;\r\n    // align-items: center;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .login {\r\n    display: flex;\r\n    flex-direction: row;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    // border: 1px solid black;\r\n    width: 250px;\r\n    // align-items: center;\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  // .el-input {\r\n  //   // width: 198px;\r\n  //   border: 1px solid black;\r\n  // }\r\n}\r\n#building {\r\n  background: url(\"../assets/background2.jpg\");\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-size: 100% 100%;\r\n  display: flex;\r\n  // filter: brightness(90%);\r\n}\r\n.button {\r\n  display: inline-block;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  padding: 10px;\r\n  width: 80px;\r\n  transition: all 0.5s;\r\n  cursor: pointer;\r\n  margin: 20px;\r\n  margin-left: 55px;\r\n  // border: 1px solid black;\r\n}\r\n\r\n.button span {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  position: relative;\r\n  transition: 0.5s;\r\n}\r\n\r\n.button span:after {\r\n  content: \"»\";\r\n  position: absolute;\r\n  opacity: 0;\r\n  top: 0;\r\n  right: -20px;\r\n  transition: 0.5s;\r\n}\r\n\r\n.button:hover span {\r\n  padding-right: 15px;\r\n}\r\n\r\n.button:hover span:after {\r\n  opacity: 1;\r\n  right: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData, getStore } from \"@/api\";\nimport * as echarts from \"echarts\";\nimport employee from \"@/views/StoreManagement/Employee.vue\";\n// import {ref} from \"vue\";\n\nvar arr = []; //用来存放最近七天的时间\n\nfunction getBeforeDate(n) {\n  var n = n;\n  console.log(n); //\n  var d = new Date();\n  var year = d.getFullYear();\n  var mon = d.getMonth() + 1;\n  var day = d.getDate();\n  if (day <= n) {\n    if (mon > 1) {\n      mon = mon - 1;\n    } else {\n      year = year - 1;\n      mon = 12;\n    }\n  }\n  d.setDate(d.getDate() + n); //很重要，+n取得是前一天的时间\n  year = d.getFullYear();\n  mon = d.getMonth() + 1;\n  day = d.getDate();\n  var s = (mon < 10 ? '0' + mon : mon) + \"-\" + (day < 10 ? '0' + day : day);\n  return s;\n}\nfor (var i = 0; i > -30; i--) {\n  arr.push(getBeforeDate(i));\n}\n\n// let value;\nexport default {\n  // value:ref(''),\n  data() {\n    return {\n      newStoreId: '',\n      StoreData: [],\n      tableData: [],\n      options: [{\n        storeId: '店id',\n        storeName: '店名',\n        address: '地点',\n        manger: \"负责人\",\n        size: '面积',\n        workers: '1'\n      }],\n      countData: [{\n        name: \"公司负责人: \",\n        value: \"高启强\",\n        color: \"#409EFF\"\n      }, {\n        name: \"在值员工数: \",\n        value: 25,\n        color: \"#f28d3c\"\n      }, {\n        name: \"地址: \",\n        value: \"京海市剧场街\",\n        color: \"#f23c3c\"\n      }, {\n        name: \"店面面积: \",\n        value: 200,\n        color: \"#409EFF\"\n      }]\n    };\n  },\n  // setup(){\n  //   const changeInfo=(e)=>{\n  //     this.$data.newStoreId=e\n  //     // this.data.newStoreId=e\n  //     console.log(e)\n  //   }\n  //   return {changeInfo}\n  // },\n  methods: {\n    // eslint-disable-next-line vue/no-dupe-keys\n    changeInfo(e) {\n      this.newStoreId = e;\n      // this.data.newStoreId=e\n      console.log(e.storeId);\n      // postStoreId(e.storeId);\n\n      this.countData[0].value = e.manger;\n      this.countData[2].value = e.address;\n      this.countData[1].value = e.workers;\n      this.countData[3].value = e.size;\n    }\n  },\n  mounted() {\n    getStore().then(datas => {\n      this.options = datas.data; //检索信息的问题部分信息丢失\n      console.log(datas);\n      console.log(\"登录数据：  \" + sessionStorage.getItem(\"employee\"));\n      const a = sessionStorage.getItem(\"employee\");\n      console.log(JSON.parse(a).employeeId.toString());\n      // console.log(\"这是什么？getStore\"+datas.data)\n    });\n\n    getData().then(({\n      data\n    }) => {\n      // console.log(data);\n      console.log(this.newStoreId);\n      const {\n        tableData\n      } = data.data;\n      this.tableData = tableData;\n      //准备基础dom ，初始化echarts实例\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      //指定图标配置项和数据\n      var echarts1Option = {};\n      const {\n        orderData\n      } = data.data;\n      echarts1Option.grid = {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n      };\n      // const xAxis = [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"];\n      const legendData = [\"历史客流量数据\"];\n      const xAxisData = {\n        type: \"category\",\n        boundaryGap: false,\n        data: arr.reverse()\n        //   [\"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\",\n        // \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\", \"21:30\", \"22:00\", \"22:30\", \"23:00\"]\n      };\n\n      echarts1Option.legend = {\n        data: legendData\n      };\n      echarts1Option.tooltip = {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n          label: {\n            backgroundColor: \"#6a7985\"\n          }\n        }\n      };\n      echarts1Option.toolbox = {\n        feature: {\n          saveAsImage: {}\n        }\n      };\n      echarts1Option.xAxis = xAxisData;\n      echarts1Option.yAxis = {\n        type: \"value\"\n      };\n      echarts1Option.series = [];\n      legendData.forEach(key => {\n        echarts1Option.series.push({\n          name: key,\n          type: \"line\",\n          areaStyle: {},\n          emphasis: {\n            focus: \"series\"\n          },\n          data: orderData.data.map(item => item[key])\n        });\n      });\n      // console.log(echarts1Option);\n      // 使用刚指定的配置项和数据显示图表。\n      echarts1.setOption(echarts1Option);\n\n      //柱状图\n      const echarts2 = echarts.init(this.$refs.echarts2);\n      const echarts2Option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#283b56\"\n            }\n          }\n        },\n        legend: {},\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: {\n              readOnly: false\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        dataZoom: {\n          show: false,\n          start: 0,\n          end: 100\n        },\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: true,\n          data: [\"9:00\", \"9:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\", \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\"]\n          // [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }],\n\n        yAxis: [{\n          type: \"value\",\n          scale: true,\n          name: \"预计时段所需人数\",\n          max: 10,\n          min: 0,\n          boundaryGap: [0.2, 0.2]\n        }, {\n          type: \"value\",\n          scale: true,\n          name: \"昨日客流数据\",\n          max: 40,\n          min: 0,\n          boundaryGap: [0.2, 0.2]\n        }],\n        series: [{\n          name: \"预计时段所需人数\",\n          type: \"bar\",\n          // xAxisIndex: 1,\n          yAxisIndex: 0,\n          data: [0.0, 0.3, 1.5, 2.9, 3.5, 3.5, 4.6, 6.0, 7.1, 5.7, 6.2, 7.6, 7.7, 6.9, 5.8, 4.5, 4.0, 3.5, 3.1, 1.9, 1.5, 0.6, 0.3, 0.3]\n        }, {\n          name: \"昨日客流数据\",\n          type: \"line\",\n          yAxisIndex: 1,\n          data: [0.0, 1.3, 5.7, 11.1, 13.4, 13.3, 17.3, 22.8, 26.9, 21.6, 23.4, 28.7, 29.3, 26.4, 22.1, 17.2, 15.2, 13.3, 11.6, 7.2, 5.6, 2.1, 1.3, 1.0]\n        }]\n      };\n      echarts2.setOption(echarts2Option);\n      const echarts3Option = {\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n        },\n        legend: {\n          data: [\"偏好1\", \"偏好2\", \"偏好3\", \"其他\"]\n        },\n        series: [{\n          name: \"偏好\",\n          type: \"pie\",\n          radius: [\"45%\", \"60%\"],\n          // labelLine: {\n          //   length: 30\n          // },\n          // label: {\n          //   // {a|{a}}{abg|}\\n{hr|}\\n\n          //   // formatter: \"{b|{b}：}{c}  {per|{d}%}  \",\n          //   backgroundColor: \"#F6F8FC\",\n          //   borderColor: \"#8C8D8E\",\n          //   borderWidth: 1,\n          //   borderRadius: 4,\n          //   rich: {\n          //     b: {\n          //       color: \"#4C5058\",\n          //       fontSize: 14,\n          //       fontWeight: \"bold\",\n          //       lineHeight: 33\n          //     },\n          //     per: {\n          //       color: \"#fff\",\n          //       backgroundColor: \"#4C5058\",\n          //       padding: [3, 4],\n          //       borderRadius: 4\n          //     }\n          //   }\n          // },\n          data: [{\n            value: 1048,\n            name: \"偏好1\"\n          }, {\n            value: 335,\n            name: \"偏好2\"\n          }, {\n            value: 310,\n            name: \"偏好3\"\n          }, {\n            value: 251,\n            name: \"其他\"\n          }]\n        }]\n      };\n      const echarts3 = echarts.init(this.$refs.echarts3);\n      echarts3.setOption(echarts3Option);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["getData","getStore","echarts","employee","arr","getBeforeDate","n","console","log","d","Date","year","getFullYear","mon","getMonth","day","getDate","setDate","s","i","push","data","newStoreId","StoreData","tableData","options","storeId","storeName","address","manger","size","workers","countData","name","value","color","methods","changeInfo","e","mounted","then","datas","sessionStorage","getItem","a","JSON","parse","employeeId","toString","echarts1","init","$refs","echarts1Option","orderData","grid","left","right","bottom","containLabel","legendData","xAxisData","type","boundaryGap","reverse","legend","tooltip","trigger","axisPointer","label","backgroundColor","toolbox","feature","saveAsImage","xAxis","yAxis","series","forEach","key","areaStyle","emphasis","focus","map","item","setOption","echarts2","echarts2Option","show","dataView","readOnly","restore","dataZoom","start","end","scale","max","min","yAxisIndex","echarts3Option","formatter","radius","echarts3"],"sourceRoot":"","sources":["E:\\work\\vue\\schedule\\intelligent-schedule\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-row class=\"top\">\r\n      <el-card class=\"component1\">\r\n        <el-clo>\r\n          <text class=\"text-title\">店面信息</text>\r\n          <div class=\"select-border\">\r\n            <text class=\"text-name\">门店名称:</text>\r\n\r\n            <el-select v-model=\"options.value\" class=\"select\" placeholder=\"浙江分公司\"  size=\"large\">\r\n              <el-option\r\n                  v-for=\"item in options\"\r\n                  :key=\"item.storeId\"\r\n                  :label=\"item.storeName\"\r\n                  :value=\"item.storeId\"\r\n                  @click=\"changeInfo(item)\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </div>\r\n          <div class=\"classify\">\r\n\r\n            <el-card\r\n                class=\"card\"\r\n                shadow=\"never\"\r\n                v-for=\"item in countData\"\r\n                :key=\"item.name\"\r\n                :body-style=\"{display: 'flex',padding:0 }\"\r\n            >\r\n              <div class=\"detail\">\r\n<!--                <div class=\"my-icon\" :style=\"{background : item.color}\"></div>-->\r\n                <p class=\"desc\">{{ item.name }}</p>\r\n                <p class=\"num\">{{ item.value }}</p>\r\n              </div>\r\n            </el-card>\r\n          </div>\r\n        </el-clo>\r\n      </el-card>\r\n      <el-card class=\"component2\" :body-style=\"{padding:0 }\">\r\n        <!-- 柱状图 -->\r\n        <text class=\"text-title\">客流量预测</text>\r\n        <div ref=\"echarts2\" style=\"height:380px\"></div>\r\n      </el-card>\r\n    </el-row>\r\n\r\n    <el-row class=\"buttom\">\r\n      <el-card class=\"component2\" :body-style=\"{padding:0 }\">\r\n        <text class=\"text-title\">历史客流量</text>\r\n        <!-- 折线图 -->\r\n        <div ref=\"echarts1\" style=\"height:380px\"></div>\r\n      </el-card>\r\n      <el-card class=\"component1\" :body-style=\"{padding:0 }\">\r\n        <text class=\"text-title\">偏好排名前列</text>\r\n        <!-- 折线图 -->\r\n        <div ref=\"echarts3\" style=\"height:380px\"></div>\r\n      </el-card>\r\n    </el-row>\r\n    \r\n    <!-- <div class=\"button\"></div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getData,\r\n  getStore\r\n} from \"@/api\";\r\nimport * as echarts from \"echarts\";\r\nimport employee from \"@/views/StoreManagement/Employee.vue\";\r\n// import {ref} from \"vue\";\r\n\r\n\r\nvar arr = [];//用来存放最近七天的时间\r\n\r\nfunction getBeforeDate(n) {\r\n  var n = n;\r\n  console.log(n);//\r\n  var d = new Date();\r\n  var year = d.getFullYear();\r\n  var mon = d.getMonth() + 1;\r\n  var day = d.getDate();\r\n  if(day <= n) {\r\n    if(mon > 1) {\r\n      mon = mon - 1;\r\n    } else {\r\n      year = year - 1;\r\n      mon = 12;\r\n    }\r\n  }\r\n  d.setDate(d.getDate() + n); //很重要，+n取得是前一天的时间\r\n  year = d.getFullYear();\r\n  mon = d.getMonth() + 1;\r\n  day = d.getDate();\r\n  var s = (mon < 10 ? ('0' + mon) : mon) + \"-\" + (day < 10 ? ('0' + day) : day);\r\n  return s;\r\n}\r\n\r\nfor(var i = 0; i > -30; i--) {\r\n  arr.push(getBeforeDate(i));\r\n\r\n}\r\n\r\n\r\n// let value;\r\nexport default {\r\n  // value:ref(''),\r\n  data() {\r\n    return {\r\n      newStoreId:'',\r\n      StoreData: [],\r\n      tableData: [],\r\n      options: [{\r\n        storeId: '店id',\r\n        storeName: '店名',\r\n        address:'地点',\r\n        manger:\"负责人\",\r\n        size:'面积',\r\n        workers:'1',\r\n      }],\r\n      countData: [\r\n        {\r\n          name: \"公司负责人: \",\r\n          value: \"高启强\",\r\n          color: \"#409EFF\"\r\n        },\r\n        {\r\n          name: \"在值员工数: \",\r\n          value: 25,\r\n          color: \"#f28d3c\"\r\n        },\r\n        {\r\n          name: \"地址: \",\r\n          value: \"京海市剧场街\",\r\n          color: \"#f23c3c\"\r\n        },\r\n        {\r\n          name: \"店面面积: \",\r\n          value: 200,\r\n          color: \"#409EFF\"\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  // setup(){\r\n  //   const changeInfo=(e)=>{\r\n  //     this.$data.newStoreId=e\r\n  //     // this.data.newStoreId=e\r\n  //     console.log(e)\r\n  //   }\r\n  //   return {changeInfo}\r\n  // },\r\n  methods:{\r\n    // eslint-disable-next-line vue/no-dupe-keys\r\n     changeInfo(e){\r\n      this.newStoreId=e\r\n      // this.data.newStoreId=e\r\n      console.log(e.storeId)\r\n       // postStoreId(e.storeId);\r\n\r\n       this.countData[0].value=e.manger\r\n       this.countData[2].value=e.address\r\n       this.countData[1].value=e.workers\r\n       this.countData[3].value=e.size\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n    getStore().then((datas) => {\r\n\r\n      this.options = datas.data;//检索信息的问题部分信息丢失\r\n      console.log(datas)\r\n      console.log(\"登录数据：  \"+sessionStorage.getItem(\"employee\"));\r\n      const a = sessionStorage.getItem(\"employee\");\r\n      console.log((JSON.parse(a).employeeId).toString())\r\n      // console.log(\"这是什么？getStore\"+datas.data)\r\n    });\r\n    getData().then(({data}) => {\r\n      // console.log(data);\r\n      console.log(this.newStoreId)\r\n      const {tableData} = data.data\r\n      this.tableData = tableData\r\n      //准备基础dom ，初始化echarts实例\r\n      const echarts1 = echarts.init(this.$refs.echarts1);\r\n      //指定图标配置项和数据\r\n      var echarts1Option = {};\r\n      const {orderData} = data.data;\r\n      echarts1Option.grid = {\r\n        left: \"3%\",\r\n        right: \"4%\",\r\n        bottom: \"3%\",\r\n        containLabel: true\r\n      };\r\n      // const xAxis = [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"];\r\n      const legendData = [\"历史客流量数据\"];\r\n      const xAxisData = {\r\n        type: \"category\",\r\n        boundaryGap: false,\r\n        data: arr.reverse(),\r\n          //   [\"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\",\r\n          // \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\", \"21:30\", \"22:00\", \"22:30\", \"23:00\"]\r\n      };\r\n      echarts1Option.legend = {\r\n        data: legendData\r\n      };\r\n      echarts1Option.tooltip = {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          type: \"cross\",\r\n          label: {\r\n            backgroundColor: \"#6a7985\"\r\n          }\r\n        }\r\n      };\r\n      echarts1Option.toolbox = {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      };\r\n      echarts1Option.xAxis = xAxisData;\r\n      echarts1Option.yAxis = {\r\n        type: \"value\"\r\n      };\r\n      echarts1Option.series = [];\r\n      legendData.forEach(key => {\r\n        echarts1Option.series.push({\r\n          name: key,\r\n          type: \"line\",\r\n          areaStyle: {},\r\n          emphasis: {\r\n            focus: \"series\"\r\n          },\r\n          data: orderData.data.map(item => item[key])\r\n        });\r\n      });\r\n      // console.log(echarts1Option);\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      echarts1.setOption(echarts1Option);\r\n\r\n      //柱状图\r\n      const echarts2 = echarts.init(this.$refs.echarts2);\r\n      const echarts2Option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              backgroundColor: \"#283b56\"\r\n            }\r\n          }\r\n        },\r\n        legend: {},\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            dataView: {readOnly: false},\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        dataZoom: {\r\n          show: false,\r\n          start: 0,\r\n          end: 100\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            boundaryGap: true,\r\n            data: [\"9:00\", \"9:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\",\r\n              \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\"]\r\n                // [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            scale: true,\r\n            name: \"预计时段所需人数\",\r\n            max: 10,\r\n            min: 0,\r\n            boundaryGap: [0.2, 0.2]\r\n          },\r\n          {\r\n            type: \"value\",\r\n            scale: true,\r\n            name: \"昨日客流数据\",\r\n            max: 40,\r\n            min: 0,\r\n            boundaryGap: [0.2, 0.2]\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"预计时段所需人数\",\r\n            type: \"bar\",\r\n            // xAxisIndex: 1,\r\n            yAxisIndex: 0,\r\n            data: [0.0, 0.3, 1.5, 2.9, 3.5, 3.5, 4.6, 6.0, 7.1, 5.7, 6.2, 7.6, 7.7, 6.9, 5.8, 4.5, 4.0, 3.5, 3.1, 1.9, 1.5, 0.6, 0.3, 0.3]\r\n          },\r\n          {\r\n            name: \"昨日客流数据\",\r\n            type: \"line\",\r\n            yAxisIndex: 1,\r\n            data: [0.0, 1.3, 5.7, 11.1, 13.4, 13.3, 17.3, 22.8, 26.9, 21.6, 23.4, 28.7, 29.3, 26.4, 22.1, 17.2, 15.2, 13.3, 11.6, 7.2, 5.6, 2.1, 1.3, 1.0]\r\n          }\r\n        ]\r\n      };\r\n      echarts2.setOption(echarts2Option);\r\n\r\n      const echarts3Option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n        },\r\n        legend: {\r\n          data: [\r\n            \"偏好1\",\r\n            \"偏好2\",\r\n            \"偏好3\",\r\n            \"其他\",\r\n          ]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"偏好\",\r\n            type: \"pie\",\r\n            radius: [\"45%\", \"60%\"],\r\n            // labelLine: {\r\n            //   length: 30\r\n            // },\r\n            // label: {\r\n            //   // {a|{a}}{abg|}\\n{hr|}\\n\r\n            //   // formatter: \"{b|{b}：}{c}  {per|{d}%}  \",\r\n            //   backgroundColor: \"#F6F8FC\",\r\n            //   borderColor: \"#8C8D8E\",\r\n            //   borderWidth: 1,\r\n            //   borderRadius: 4,\r\n            //   rich: {\r\n            //     b: {\r\n            //       color: \"#4C5058\",\r\n            //       fontSize: 14,\r\n            //       fontWeight: \"bold\",\r\n            //       lineHeight: 33\r\n            //     },\r\n            //     per: {\r\n            //       color: \"#fff\",\r\n            //       backgroundColor: \"#4C5058\",\r\n            //       padding: [3, 4],\r\n            //       borderRadius: 4\r\n            //     }\r\n            //   }\r\n            // },\r\n            data: [\r\n              {value: 1048, name: \"偏好1\"},\r\n              {value: 335, name: \"偏好2\"},\r\n              {value: 310, name: \"偏好3\"},\r\n              {value: 251, name: \"其他\"},\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      const echarts3 = echarts.init(this.$refs.echarts3);\r\n      echarts3.setOption(echarts3Option);\r\n    });\r\n\r\n  }\r\n\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\nbody{\r\n  min-width:1920px;\r\n}\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  //height: 80vh;\r\n\r\n  .top {\r\n    display: flex;\r\n    flex: 1;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n\r\n    .component1 {\r\n      //position: absolute;\r\n      //left: 0;\r\n      height: 400px;\r\n      background-color: #fff;\r\n      border-radius: 15px;\r\n      display: flex;\r\n      flex: 3;\r\n      flex-direction: column;\r\n      margin-right: 10px;\r\n      //align-items: center;\r\n      .text-title {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n      .select-border {\r\n\r\n        display: flex;\r\n        height: 50px;\r\n        //width: 300px;\r\n        border: 1px solid var(--el-border-color);\r\n        border-radius: 15px;\r\n        padding: 5px;\r\n        margin-top: 20px;\r\n        background-color: #6292f4;\r\n\r\n        align-items: center;\r\n\r\n        .select {\r\n          border-radius: 15px;\r\n          width: 180px;\r\n        }\r\n\r\n        .text-name {\r\n          color: #fff;\r\n          font-weight: 700;\r\n          font-size: 20px;\r\n          margin-left: 20px;\r\n          margin-right: 20px;\r\n        }\r\n      }\r\n\r\n      .classify {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .card {\r\n          padding: 1px;\r\n          margin: 0;\r\n          border: 1px solid white;\r\n          border-block-end-color: var(--el-card-border-color);\r\n          border-block-start-color: var(--el-card-border-color);\r\n\r\n\r\n          .my-icon {\r\n            width: 10px;\r\n            height: 40px;\r\n            margin-top: 10px;\r\n            margin-right: 20px;\r\n          }\r\n\r\n          .detail {\r\n            display: flex;\r\n            .desc {\r\n              line-height: 20px;\r\n              height: 20px;\r\n              width: 120px;\r\n              font-size: 20px;\r\n            }\r\n\r\n            .num {\r\n              line-height: 20px;\r\n              height: 20px;\r\n              font-size: 20px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .component2 {\r\n      margin-left: 10px;\r\n      background-color: #fff;\r\n      border-radius: 15px;\r\n      display: flex;\r\n      flex: 7;\r\n      flex-direction: column;\r\n      padding: 20px;\r\n\r\n      .text-title {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        margin: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .buttom {\r\n    display: flex;\r\n    flex: 1;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n\r\n    .component1 {\r\n      margin-left: 10px;\r\n      background-color: #fff;\r\n      border-radius: 15px;\r\n      display: flex;\r\n      flex: 1;\r\n      flex-direction: column;\r\n      padding: 20px;\r\n\r\n      .text-title {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n\r\n    .component2 {\r\n      margin-right: 10px;\r\n      background-color: #fff;\r\n      border-radius: 15px;\r\n      display: flex;\r\n      flex: 2;\r\n      flex-direction: column;\r\n      padding: 20px;\r\n\r\n      .text-title {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"building\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"login_title\"\n}, \"用户登录\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    ref: \"form\",\n    class: \"login-container\",\n    model: $data.form,\n    inline: true\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" :rules=\\\"rules\\\" \"), _hoisted_2, _createElementVNode(\"div\", null, [_createVNode(_component_el_form_item, {\n      class: \"login_username\",\n      label: \"用户名\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event),\n        placeholder: \"请输入账号\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密  码\",\n      class: \"login\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.form.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $options.submit,\n        class: \"button\",\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登录\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAU;gCAGdC,oBAAiC;EAA7BC,KAAK,EAAC;AAAa,GAAC,MAAI;;;;;;;uBAHhCC,oBAsBM,OAtBNC,UAsBM,GArBJC,aAoBUC;IApBDC,GAAG,EAAC,MAAM;IAACL,KAAK,EAAC,iBAAiB;IAAEM,KAAK,EAAEC,UAAI;IAAGC,MAAM,EAAE;;sBACjE,MAAuB,CAAvBC,yCAAuB,EACvBC,UAAiC,EACjCX,oBAgBM,cAfJI,aAEeQ;MAFDX,KAAK,EAAC,gBAAgB;MAACY,KAAK,EAAC;;wBACzC,MAAwD,CAAxDT,aAAwDU;oBAArCN,UAAI,CAACO,QAAQ;mEAAbP,UAAI,CAACO,QAAQ;QAAEC,WAAW,EAAC;;;QAEhDZ,aAMeQ;MANDC,KAAK,EAAC,MAAgB;MAACZ,KAAK,EAAC;;wBACzC,MAIE,CAJFG,aAIEU;QAHAG,IAAI,EAAC,UAAU;oBACNT,UAAI,CAACU,QAAQ;mEAAbV,UAAI,CAACU,QAAQ;QACtBF,WAAW,EAAC;;;QAGhBZ,aAIeQ;wBAHb,MAEC,CAFDR,aAECe;QAFWC,OAAK,EAAEC,eAAM;QAAEpB,KAAK,EAAC,QAAQ;QAACgB,IAAI,EAAC;;0BAC5C,MAAE,kBAAF,IAAE","names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","ref","model","$data","inline","_createCommentVNode","_hoisted_2","_component_el_form_item","label","_component_el_input","username","placeholder","type","password","_component_el_button","onClick","$options"],"sourceRoot":"","sources":["E:\\work\\vue\\schedule\\intelligent-schedule\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div id=\"building\">\r\n    <el-form ref=\"form\" class=\"login-container\" :model=\"form\" :inline=\"true\">\r\n      <!-- :rules=\"rules\" -->\r\n      <h3 class=\"login_title\">用户登录</h3>\r\n      <div>\r\n        <el-form-item class=\"login_username\" label=\"用户名\">\r\n          <el-input v-model=\"form.username\" placeholder=\"请输入账号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密&ensp;&ensp;码\" class=\"login\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"form.password\"\r\n            placeholder=\"请输入密码\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"submit\" class=\"button\" type=\"primary\"\r\n            >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Mock from \"mockjs\";\r\nimport Cookie from \"js-cookie\";\r\nimport { getLogin, getMenu } from \"../api\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, trigger: \"blur\", message: \"请输入用户名\" },\r\n        ],\r\n        password: [{ required: true, trigger: \"blur\", message: \"请输入密码\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      // // token信息\r\n      // const token = Mock.Random.guid();\r\n      // //将token信息存入cookie用于不同页面的通讯\r\n      // Cookie.set('token',token)\r\n\r\n      // 校验通过\r\n      this.$refs.form.validate((vaild) => {\r\n        // console.log(getMenu(from))\r\n        if (vaild) {\r\n          console.log(vaild);\r\n          // console.log(\"from\"+this.form.password)\r\n          getLogin(this.form).then(({ data }) => {\r\n            // console.log(\"数据\"+data)\r\n            // console.log(\"falg   \"+data.flag)\r\n            // console.log(\"root   \"+data.employee.root)\r\n            sessionStorage.setItem(\"employee\", JSON.stringify(data.employee)); //存储user对象\r\n            let a = sessionStorage.getItem(\"employee\");\r\n            console.log(\"这是什么\" + a.trim());\r\n            console.log(a.employeeId);\r\n            console.log(\"猜猜我是谁\" + JSON.parse(a).employeeId);\r\n            // console.log(data.employee)\r\n            if (data.flag === \"ok\") {\r\n              getMenu(parseInt(data.employee.root))\r\n                .then(({ data }) => {\r\n                  if (data.code === 200) {\r\n                    //将token信息存入cookie中用于不同页面间的通讯\r\n                    Cookie.set(\"token\", data.data.token);\r\n                    //获取菜单的数据，存入store\r\n                    // data.data.menu\r\n                    this.$store.commit(\"setMenu\", data.data.menu);\r\n                    //跳转到首页\r\n                    this.$router.push(\"/home\");\r\n                  } else {\r\n                    this.$message.error(data.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            } else {\r\n              console.log(data.flag);\r\n            }\r\n          });\r\n          console.log(vaild);\r\n          // console.log(\"from\"+this.form.password)\r\n          getLogin(this.form)\r\n            .then(({ data }) => {\r\n              // console.log(\"数据\"+data)\r\n              // console.log(\"falg   \"+data.flag)\r\n              // console.log(\"root   \"+data.employee.root)\r\n              sessionStorage.setItem(\"employee\",JSON.stringify(data.employee));//存储user对象\r\n              let a = sessionStorage.getItem(\"employee\");\r\n              console.log(\"这是什么\"+a.trim())\r\n              console.log(a.employeeId)\r\n              console.log(\"猜猜我是谁\"+JSON.parse(a).employeeId);\r\n              // console.log(data.employee)\r\n              if(data.flag===\"ok\"){\r\n                getMenu(parseInt(data.employee.root)).then(({ data }) => {\r\n                  if (data.code === 200) {\r\n                    //将token信息存入cookie中用于不同页面间的通讯\r\n                    Cookie.set(\"token\", data.data.token);\r\n                    //获取菜单的数据，存入store\r\n                    // data.data.menu\r\n                    this.$store.commit(\"setMenu\", data.data.menu);\r\n                    //跳转到首页\r\n                    this.$router.push(\"/home\");\r\n                  } else {\r\n                    this.$message.error(data.data.message);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            } else {\r\n                el\r\n              console.log(data.flag);\r\n            }\r\n          });\r\n        } else {\r\n          console.log(vaild);\r\n        }\r\n      });\r\n    },\r\n\r\n    login() {\r\n      var that = this;\r\n      axios\r\n        .post(\"http://localhost:8082/employee/login\", {\r\n          //请求登录接口\r\n          username: this.form.username,\r\n          password: this.form.password,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n          that.response = response.data;\r\n          that.$emit(\"lisentcurrent\", [that.response]);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(\"pass\", that.response);\r\n      this.$router.push(\"/home\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-self: center;\r\n  justify-self: center;\r\n  width: 500px;\r\n  height: 270px;\r\n  // border: 1px solid #eaeaea;\r\n  margin: 0 auto;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  border-radius: 10px;\r\n  // padding: 35px 80px 15px 35px;\r\n  // box-shadow: 0 0 25px #cac6c6;\r\n  // box-sizing: border-box;\r\n  // box-shadow:0 0 10px 10px #fff;\r\n\r\n  div {\r\n    display: flex;\r\n    align-self: center;\r\n    justify-self: center;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .login_title {\r\n    margin-top: 40px;\r\n    // padding: 20px 0;\r\n    margin-bottom: 30px;\r\n    color: #505458;\r\n  }\r\n\r\n  .login_username {\r\n    display: flex;\r\n    flex-direction: row;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    // border: 1px solid black;\r\n    // width: 250px;\r\n    // align-items: center;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .login {\r\n    display: flex;\r\n    flex-direction: row;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    // border: 1px solid black;\r\n    width: 250px;\r\n    // align-items: center;\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  // .el-input {\r\n  //   // width: 198px;\r\n  //   border: 1px solid black;\r\n  // }\r\n}\r\n#building {\r\n  background: url(\"../assets/background2.jpg\");\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-size: 100% 100%;\r\n  display: flex;\r\n  // filter: brightness(90%);\r\n}\r\n.button {\r\n  display: inline-block;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  padding: 10px;\r\n  width: 80px;\r\n  transition: all 0.5s;\r\n  cursor: pointer;\r\n  margin: 20px;\r\n  margin-left: 55px;\r\n  // border: 1px solid black;\r\n}\r\n\r\n.button span {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  position: relative;\r\n  transition: 0.5s;\r\n}\r\n\r\n.button span:after {\r\n  content: \"»\";\r\n  position: absolute;\r\n  opacity: 0;\r\n  top: 0;\r\n  right: -20px;\r\n  transition: 0.5s;\r\n}\r\n\r\n.button:hover span {\r\n  padding-right: 15px;\r\n}\r\n\r\n.button:hover span:after {\r\n  opacity: 1;\r\n  right: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}